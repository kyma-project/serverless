apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerfile-nodejs20
  namespace: {{ .Release.Namespace }}
  labels:
    serverless.kyma-project.io/config: runtime
    serverless.kyma-project.io/runtime: nodejs20
    {{- include "tplValue" ( dict "value" .Values.global.commonLabels "context" . ) | nindent 4 }}
    app.kubernetes.io/instance: {{ template "fullname" . }}-runtime-nodejs20
    app.kubernetes.io/component: {{ template "fullname" . }}
data:
  Dockerfile: |-
    ARG base_image={{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.function_runtime_nodejs20) }}
    FROM ${base_image}
    USER root
    ARG SRC_DIR=/src

    RUN mkdir -p /usr/src/app/function
    WORKDIR /usr/src/app/function

    COPY /registry-config/* /usr/src/app/function/
    COPY $SRC_DIR/package.json /usr/src/app/function/package.json

    RUN npm install --omit=dev
    COPY $SRC_DIR /usr/src/app/function
    RUN ls -l /usr/src/app/function
    WORKDIR /usr/src/app

    USER 1000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerfile-python312
  namespace: {{ .Release.Namespace }}
  labels:
    serverless.kyma-project.io/config: runtime
    serverless.kyma-project.io/runtime: python312
    {{- include "tplValue" ( dict "value" .Values.global.commonLabels "context" . ) | nindent 4 }}
    app.kubernetes.io/instance: {{ template "fullname" . }}-runtime-python312
    app.kubernetes.io/component: {{ template "fullname" . }}
data:
  Dockerfile: |-
    ARG base_image={{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.function_runtime_python312) }}
    FROM ${base_image}
    USER root
    ENV KUBELESS_INSTALL_VOLUME=/kubeless
    
    COPY /src/requirements.txt $KUBELESS_INSTALL_VOLUME/requirements.txt
    COPY /registry-config/* /etc/
    RUN pip install --no-cache-dir -r $KUBELESS_INSTALL_VOLUME/requirements.txt
    COPY /src $KUBELESS_INSTALL_VOLUME

    RUN rm -rf /etc/pip.conf

    USER 1000
