{{- $images:=.Values.global.images  }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: buildless-serverless
    control-plane: controller-manager
  name: buildless-serverless-controller-manager
  namespace: kyma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --metrics-bind-address=:8443
            - --leader-elect
            - --health-probe-bind-address=:8081
          command:
            - /manager
          {{- $fc:=$images.function_controller  }}
          image: "{{ .Values.global.containerRegistry.path }}/{{ $fc.directory }}/{{$fc.name}}:{{$fc.version}}"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          env:
            - name: APP_FUNCTION_IMAGENODEJS20
              {{- $js20:=$images.function_runtime_nodejs20  }}
              value: "{{ .Values.global.containerRegistry.path }}/{{ $js20.directory }}/{{$js20.name}}:{{$js20.version}}"
            - name: APP_FUNCTION_IMAGE_PYTHON312
              {{- $p312:=$images.function_runtime_python312  }}
              value: "{{ .Values.global.containerRegistry.path }}/{{ $p312.directory }}/{{$p312.name}}:{{$p312.version}}"
            - name: APP_FUNCTION_PACKAGE_REGISTRY_CONFIG_SECRET_NAME
              value: "{{- tpl ( .Values.containers.manager.configuration.data.packageRegistryConfigSecretName) . }}"
            - name: APP_FUNCTION_PUBLISHER_PROXY_ADDRESS
              value: "{{.Values.containers.manager.configuration.data.functionPublisherProxyAddress }}"
      securityContext:
        runAsNonRoot: true
        runAsGroup: 1000
        runAsUser: 1000
      serviceAccountName: buildless-serverless-controller-manager
      terminationGracePeriodSeconds: 10
