apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: functions.serverless.kyma-project.io
spec:
  group: serverless.kyma-project.io
  names:
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Function is the Schema for the functions API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function.
            properties:
              env:
                description: |-
                  Specifies an array of key-value pairs to be used as environment variables for the Function.
                  You can define values as static strings or reference values from ConfigMaps or Secrets.
                  For configuration details, see the [official Kubernetes documentation](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/).
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-validations:
                - message: 'Following envs are reserved and cannot be used: [''FUNC_RUNTIME'',''FUNC_HANDLER'',''FUNC_PORT'',''FUNC_HANDLER_SOURCE'',''FUNC_HANDLER_DEPENDENCIES'',''MOD_NAME'',''NODE_PATH'',''PYTHONPATH'']'
                  rule: (self.all(e, !(e.name in ['FUNC_RUNTIME','FUNC_HANDLER','FUNC_PORT','MOD_NAME','NODE_PATH','PYTHONPATH'])))
              labels:
                additionalProperties:
                  type: string
                description: Defines labels used in Deployment's PodTemplate and applied
                  on the Function's runtime Pod.
                type: object
                x-kubernetes-validations:
                - message: Labels has key starting with serverless.kyma-project.io/
                    which is not allowed
                  rule: '!(self.exists(e, e.startsWith(''serverless.kyma-project.io/'')))'
                - message: Label value cannot be longer than 63
                  rule: self.all(e, size(e)<64)
              replicas:
                default: 1
                description: |-
                  Defines the exact number of Function's Pods to run at a time.
                  If  the Function is targeted by an external scaler,
                  then the **Replicas** field is used by the relevant HorizontalPodAutoscaler to control the number of active replicas.
                format: int32
                minimum: 0
                type: integer
              resourceConfiguration:
                description: Specifies resources requested by the Function and the
                  build Job.
                properties:
                  function:
                    description: Specifies resources requested by the Function's Pod.
                    properties:
                      profile:
                        description: |-
                          Defines the name of the predefined set of values of the resource.
                          Can't be used together with **Resources**.
                        type: string
                      resources:
                        description: |-
                          Defines the amount of resources available for the Pod.
                          Can't be used together with **Profile**.
                          For configuration details, see the [official Kubernetes documentation](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                    type: object
                    x-kubernetes-validations:
                    - message: Use profile or resources
                      rule: has(self.profile) && !has(self.resources) || !has(self.profile)
                        && has(self.resources)
                    - message: 'Invalid profile, please use one of: [''XS'',''S'',''M'',''L'',''XL'']'
                      rule: (!has(self.profile) || self.profile in ['XS','S','M','L','XL'])
                type: object
              runtime:
                description: Specifies the runtime of the Function. The available
                  values are `nodejs20`, `nodejs22`, and `python312`.
                enum:
                - nodejs20
                - nodejs22
                - python312
                type: string
              runtimeImageOverride:
                description: Specifies the runtime image used instead of the default
                  one.
                type: string
              secretMounts:
                description: Specifies Secrets to mount into the Function's container
                  filesystem.
                items:
                  properties:
                    mountPath:
                      description: Specifies the path within the container where the
                        Secret should be mounted.
                      minLength: 1
                      type: string
                    secretName:
                      description: Specifies the name of the Secret in the Function's
                        Namespace.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - mountPath
                  - secretName
                  type: object
                type: array
              source:
                description: Contains the Function's source code configuration.
                properties:
                  gitRepository:
                    description: Defines the Function as git-sourced. Can't be used
                      together with **Inline**.
                    properties:
                      baseDir:
                        description: |-
                          Specifies the relative path to the Git directory that contains the source code
                          from which the Function is built.
                        type: string
                      reference:
                        description: |-
                          Specifies either the branch name, tag or commit revision from which the Function Controller
                          automatically fetches the changes in the Function's code and dependencies.
                        type: string
                      url:
                        description: |-
                          Specifies the URL of the Git repository with the Function's code and dependencies.
                          Depending on whether the repository is public or private and what authentication method is used to access it,
                          the URL must start with the `http(s)`, `git`, or `ssh` prefix.
                        type: string
                    required:
                    - url
                    type: object
                    x-kubernetes-validations:
                    - message: BaseDir is required and cannot be empty
                      rule: has(self.baseDir) && (self.baseDir.trim().size() != 0)
                    - message: Reference is required and cannot be empty
                      rule: has(self.reference) && (self.reference.trim().size() !=
                        0)
                  inline:
                    description: Defines the Function as the inline Function. Can't
                      be used together with **GitRepository**.
                    properties:
                      dependencies:
                        description: Specifies the Function's dependencies.
                        type: string
                      source:
                        description: Specifies the Function's full source code.
                        minLength: 1
                        type: string
                    required:
                    - source
                    type: object
                type: object
                x-kubernetes-validations:
                - message: Use GitRepository or Inline source
                  rule: has(self.gitRepository) && !has(self.inline) || !has(self.gitRepository)
                    && has(self.inline)
            required:
            - runtime
            - source
            type: object
          status:
            description: FunctionStatus defines the observed state of Function.
            properties:
              baseDir:
                description: |-
                  Specifies the relative path to the Git directory that contains the source code
                  from which the Function is built.
                type: string
              commit:
                description: Specifies the commit hash used to build the Function.
                type: string
              conditions:
                description: Specifies an array of conditions describing the status
                  of the parser.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              functionResourceProfile:
                description: Specifies the preset used for the function
                type: string
              podSelector:
                description: Specifies the Pod selector used to match Pods in the
                  Function's Deployment.
                type: string
              reference:
                description: |-
                  Specifies either the branch name, tag or commit revision from which the Function Controller
                  automatically fetches the changes in the Function's code and dependencies.
                type: string
              replicas:
                description: Specifies the total number of non-terminated Pods targeted
                  by this Function.
                format: int32
                type: integer
              runtime:
                description: Specifies the **Runtime** type of the Function.
                type: string
              runtimeImage:
                description: Specifies the image version used to build and run the
                  Function's Pods.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
